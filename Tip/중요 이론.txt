------------------------------------------
설계순서
1. 요구조건분석
2. 개념설계  ERD==데이터 조직도
3. 논리설계  테이블
4. 물리설계 
5. 구현 및 확인
	SQL : CRUD
	인터프리터 언어
	컴파일XXX 번역과 동시에 실행

--------------------------------------------

DBMS 데이터 관리가 용이
 1. 데이터 중복 최소화
 2. 정보 표준화
 3. 협업 용이 == 공유 용이

--------------------------------------------

[내장 객체]
 JSP ---> Servlet파일로 변환
	application, session, out, request, .....
 내장객체들은 주로 데이터를 주고 받을때 사용됨

--------------------------------------------
=프로젝트 문서화=
제목
환경설정
코드분석
☆오류해결과정
  원인과 해결방법을 설명
데이터 가공
---------------------------------------------

[MVC]
M :  DB연동 JDBC관련코드
	DAO  CRUD 비즈니스메서드(보통 5개)  DB연동
	VO    데이터를 담기위한 객체
V  :  사용자에게 인터페이스를 제공(.jsp)
C  :  M-V 연결다리 
	V 사용자가 요청한 명령이 무엇인지
	M에게 알려주는 연결다리 역할

요구조건분석
 대략적인 메서드 개수
 대략적인 페이지 개수
 대략적인 사용데이터 개수
----------------------------------------------

Spring [.xml]
 "IoC와 AOP를 지원하는 경량의 컨테이너 프레임워크"
IoC -> 객체생성을 내가안함    제어의 역행 == [낮은 결합도]
  컨테이너가 new를 함
  JAVA코드에서 new가 사라짐
  결합도가 낮아짐!★
   ex) IPhone+AppleWatch
AOP -> 응집도가 높아짐!★    관점지향 프로그래밍 == [높은 응집도]

코드의 제 1가치
 == 유지보수
 -> 낮은결합도+높은응집도
----------------------------------------------

1. *.do 요청
2. web.xml에 의해 servlet-mapping
3. 서블릿컨테이너--객체생성-->DS
4. 요청분석 => JSP 팀 프로젝트(if(action.equals("/login.do")))
5. 요청에 맞는 컨트롤러 객체를 반환 => new LoginController();
6. 5의 역할을 담당하는 HM
7. 컨트롤러 객체가 요청을 처리, 결과로 MAV객체를 반환 => ActionForward
 - VR의 등장으로 String을 반환함(경로)
 - 스프링 컨테이너의 개입으로 MAV.addObjet()처리 가능해짐 -> MAV를 반환함
8. VR가 MAV에서 V(경로)정보를 추출
	=> 정보를 출력하는 페이지들을 더 안정적으로 서비스 가능해짐

-------------------------------------------------
AOP

 Aspect Oriented Programming
 관점 지향 프로그래밍
↓ 핵심관심 core concern 비즈니스 메서드 CRUD
→ (트랜잭션,로그,예외처리) 횡단관심 crosscutting concern

☆유지보수
핵심관심 전후에 수행되는 횡단관심들의 유지보수 향상을 위해 AOP사용!

"관심분리 Separation of Concern"
AOP 사용을 위한 준비
 1) pom.xml에서 AOP관련 라이브러리 설치
 2) 네임스페이스를 추가
 3) .xml에 결합관련 설정을 작성
	a) la=new LogAdvice();을 위한 <bean>설정
	b) 비즈니스메서드 호출시, la.printLog()호출될수있도록 설정

1. 조인포인트
	포인트컷 후보
	모든 비즈니스 메서드
	 -> 횡단관심에게 선택된 메서드를 포인트컷이라 함
2. 포인트컷 == 핵심관심(비즈니스 메서드,CRUD)
	-> CUD : 트랜잭션,보안
	-> R : 권한확인,로깅
3. 어드바이스 == 횡단관심
	AOP를 지원하는 컨테이너에 의해 결합될수있기때문에,
	별도의 클래스로 저장됨!
4. 애스팩트
	포인트컷+횡단관심의 결합


